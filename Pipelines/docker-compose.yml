services:
  dotnet:
    image: dotnet
    restart: always
    networks:
      - traefik-public
    deploy:
      mode: replicated
      labels:
        - traefik

  react:
    image: react
    networks:
      - traefik-public
    deploy:
      mode: replicated
      replicas: 3
      labels:
       - traefik

  db-version:
    image: sql-something
    networks:
      - traefik-public
    deploy:

  api:
    image: ${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${DOCKER_TAG}
    restart: always
    networks:
      - traefik-public
    deploy:
      mode: replicated
      replicas: 3
      labels:
        - traefik.enable=true
        - traefik.docker.network=traefik-public
        - traefik.constraint-label=traefik-public
        - traefik.http.routers.${STACK_NAME}-http.rule=Host(`${STACK_NAME}.doe24.swarm.chasacademy.dev`)
        - traefik.http.routers.${STACK_NAME}-http.entrypoints=http
        - traefik.http.routers.${STACK_NAME}-http.middlewares=https-redirect
        - traefik.http.routers.${STACK_NAME}-https.rule=Host(`${STACK_NAME}.doe24.swarm.chasacademy.dev`)
        - traefik.http.routers.${STACK_NAME}-https.entrypoints=https
        - traefik.http.routers.${STACK_NAME}-https.tls=true
        - traefik.http.routers.${STACK_NAME}-https.tls.certresolver=le
        - traefik.http.services.${STACK_NAME}.loadbalancer.server.port=8000

networks:
  traefik-public:
    external: true
