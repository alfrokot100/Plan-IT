// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TeamApp.Data;

#nullable disable

namespace TeamApp.Migrations
{
    [DbContext(typeof(TeamDBContext))]
    [Migration("20250428092028_InitNewDB")]
    partial class InitNewDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TeamApp.Models.Comment", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommentID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TaskID")
                        .HasColumnType("int");

                    b.Property<int?>("TeamID")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserID_FK")
                        .HasColumnType("int");

                    b.HasKey("CommentID");

                    b.HasIndex("TaskID");

                    b.HasIndex("TeamID");

                    b.HasIndex("UserID_FK");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("TeamApp.Models.Goal", b =>
                {
                    b.Property<int>("GoalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GoalID"));

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserID_FK")
                        .HasColumnType("int");

                    b.HasKey("GoalID");

                    b.HasIndex("UserID_FK");

                    b.ToTable("Goals");
                });

            modelBuilder.Entity("TeamApp.Models.LogEntry", b =>
                {
                    b.Property<int>("LogEntryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogEntryID"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mood")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Note")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("UserID_FK")
                        .HasColumnType("int");

                    b.HasKey("LogEntryID");

                    b.HasIndex("UserID_FK");

                    b.ToTable("LogEntrys");
                });

            modelBuilder.Entity("TeamApp.Models.Notification", b =>
                {
                    b.Property<int>("NotificationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NotificationID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID_FK")
                        .HasColumnType("int");

                    b.HasKey("NotificationID");

                    b.HasIndex("UserID_FK");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("TeamApp.Models.Task", b =>
                {
                    b.Property<int>("TaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TaskID"));

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("GoalID_FK")
                        .HasColumnType("int");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("UserID_FK")
                        .HasColumnType("int");

                    b.HasKey("TaskID");

                    b.HasIndex("GoalID_FK");

                    b.HasIndex("UserID_FK");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("TeamApp.Models.Team", b =>
                {
                    b.Property<int>("TeamID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeamID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("TeamID");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("TeamApp.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TeamID_FK")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.HasIndex("TeamID_FK");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TeamApp.Models.Comment", b =>
                {
                    b.HasOne("TeamApp.Models.Task", "Task")
                        .WithMany("Comments")
                        .HasForeignKey("TaskID");

                    b.HasOne("TeamApp.Models.Team", "Team")
                        .WithMany()
                        .HasForeignKey("TeamID");

                    b.HasOne("TeamApp.Models.User", "User")
                        .WithMany("Comments")
                        .HasForeignKey("UserID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("Team");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeamApp.Models.Goal", b =>
                {
                    b.HasOne("TeamApp.Models.User", "User")
                        .WithMany("Goals")
                        .HasForeignKey("UserID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeamApp.Models.LogEntry", b =>
                {
                    b.HasOne("TeamApp.Models.User", "User")
                        .WithMany("LogEntries")
                        .HasForeignKey("UserID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeamApp.Models.Notification", b =>
                {
                    b.HasOne("TeamApp.Models.User", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeamApp.Models.Task", b =>
                {
                    b.HasOne("TeamApp.Models.Goal", "Goal")
                        .WithMany("Tasks")
                        .HasForeignKey("GoalID_FK");

                    b.HasOne("TeamApp.Models.User", "User")
                        .WithMany("Tasks")
                        .HasForeignKey("UserID_FK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Goal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TeamApp.Models.User", b =>
                {
                    b.HasOne("TeamApp.Models.Team", "Team")
                        .WithMany("Users")
                        .HasForeignKey("TeamID_FK");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("TeamApp.Models.Goal", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("TeamApp.Models.Task", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("TeamApp.Models.Team", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("TeamApp.Models.User", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Goals");

                    b.Navigation("LogEntries");

                    b.Navigation("Notifications");

                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
